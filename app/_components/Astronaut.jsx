"use client";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: LasquetiSpice (https://sketchfab.com/LasquetiSpice)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/animated-astronaut-character-in-space-suit-loop-8fe5c8d3365e4d87bb7bc253d53a64e1
Title: Animated Astronaut Character in Space Suit Loop
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Astronaut(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "/models/scene-transformed.glb"
  );

  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    const action = actions[props.animation];
    if (action) {
      action.play();
    }

    // Optionally stop the animation when the component unmounts
    return () => {
      if (action) {
        action.stop();
      }
    };
  }, [actions]);

  // if you want to animate the 3dmodel
  // useFrame((state, delta, xframe) => {
  //   console.log(state.clock);
  //   group.current.position.x = -0.2 + Math.sin(state.clock.elapsedTime) * 0.02;
  // });

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      // position={[0, -0.2, 0]}
      position={props.position}
      scale={[0.13, 0.13, 0.13]}
    >
      <group name="Sketchfab_Scene">
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        <skinnedMesh
          name="Object_99"
          geometry={nodes.Object_99.geometry}
          material={materials.material_0}
          skeleton={nodes.Object_99.skeleton}
          scale={0.013}
        />
        <skinnedMesh
          name="Object_100"
          geometry={nodes.Object_100.geometry}
          material={materials.material_0}
          skeleton={nodes.Object_100.skeleton}
          scale={0.013}
        />
        <skinnedMesh
          name="Object_103"
          geometry={nodes.Object_103.geometry}
          material={materials.material_1}
          skeleton={nodes.Object_103.skeleton}
          scale={0.013}
        />
        <skinnedMesh
          name="Object_106"
          geometry={nodes.Object_106.geometry}
          material={materials.material_2}
          skeleton={nodes.Object_106.skeleton}
          scale={0.013}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/scene-transformed.glb");
